---
format:
  revealjs:
    # embed-resources: true
    transition: slide # fade/slide/convex/concave/zoom/none
    preview-links: true # navegar links dentro de la misma presentación (iframe)
    progress: true # mostrar barra de progreso
    scrollable: true # desplazar verticalmente diapositivas
    # incremental: true # listas aparecen de uno en uno
    theme: simple # beige/blood/dark/league/moon/night/serif/simple/sky/solarized
    logo: "https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png"
    footer: "[Ver código de la presentación](https://github.com/santi-rios/quarto-iframes/blob/main/index.qmd)"
    # width: 1280
    # height: 720
    chalkboard:
      buttons: true
preload-iframes: true
# editor: source # visual/source - qué editor usar
bibliography: references.bib # dónde se guardan las referencias
params:
  species: Adelie # solo para ejemplo de diapo 
---

#  {background-iframe="./stars/dist/index.html" background-interactive="False"}

::: {style="background-color: #ffffffbb; border-radius: 10px; padding: 5px;"}
::: r-fit-text
R Markdown y Quarto

:::

[Mariana Guerrero Osornio](mailto:mgueosor@hotmail.com)

[Santiago Garcia Rios](mailto:santiago_gr@ciencias.unam.mx)

:::

<span style='font-size:1.2em; font-family:Arial; font-weight: bold; color: white;'>Estadística General en R</span>


# Introducción {background-iframe="./logo-fall/index.html" background-interactive="False"}

## Markdown

::: {.incremental}
- Lenguaje de marcado *plano* diseñado para ser eficiente. 
- Facilmente se puede convertir a distintos formatos (HTML, PDF, Word...).  
- RMarkdown y Quarto son una extensión de Markdown que permite ejecutar código en R.
:::

::: footer
[*The Markdown guide*](https://www.markdownguide.org/)
:::

## Comparación de texto en markdown vs Word

::: {layout-nrow=2}
![Word](figuras/word.jpg)

![Word en Editor de Texto](figuras/word_editor.jpg)

![Markdown](figuras/markdown.jpg)

![Markdown en Editor de Texto](figuras/markdown_editor.jpg)
:::

## ¿Qué es RMarkdownon?

<span style="font-size: 1.5em;">Es una librería que permite hacer documentos dinámicos y reproducibles con <span style="color: red;">R.</span> 
Combina código, texto, datos y gráficas.</span>

<div style="text-align: right;">
  <img src="./figuras/logo1.png" style="width: 200px;">
</div>


::: footer
[Sitio de R Markdown](https://rmarkdown.rstudio.com/)
:::

## ¿Qué es Quarto ?

<span style="font-size: 1.3em;"><span style="color: red;">Quarto</span> es un sistema que también permite crear documentos interactivos usando texto, código y visualizaciones.
Permite crear documentos ejecutando código con [Knitr](https://yihui.org/knitr/) (igual que RMarkdown) o con [Jupyter Notebooks](https://jupyter.org/) en una sola herramienta.</span>
<div style="text-align: right;">
  <img src="./figuras/im6.png" style="width: 180px;">
</div>

::: footer
[Página oficial de Quarto](https://quarto.org/)
:::


## Se pueden realizar diferentes tareas: 
::: {.incremental}
-	Crear documentos en diferentes formatos: <span style="color: darkblue;">PDF, Word, HTML</span>
-	Añadir y ejecutar código <span style="color: darkblue;">(bash, python, R, sql..)</span> 
-	Hacer presentaciones: PowerPoint, [Revealjs](https://revealjs.com/)
-	Crear sitios webs
-	Hacer análisis y reportes estadísticos
-	Crear aplicaciones con <span style="color: darkblue;">Shiny</span>
:::

## Crear un archivo R Markdown {background-iframe="./codevember-1/dist/index.html" background-interactive="False"}
- Abrir R > Archivo > Documento nuevo > R Markdown
<div style="display: grid; grid-template-columns: auto auto;">
  <div style="align-self: flex-start;">
    <img src="./figuras/im2.png" style="border: 2px solid black;" style="width: 500px;">
  </div>
  <div style="align-self: flex-start;">
    <img src="./figuras/im3.png" style="border: 2px solid black;" style="width: 500px;">
  </div>
</div>

## Crear un archivo R Markdown {background-iframe="./codevember-1/dist/index.html" background-interactive="False"}


- Se obtendrá el siguiente archivo:

<div style="position: center">
  <img src="./figuras/im4.png">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<div style="position: absolute; top: 270px; left: 550px; color: red; font-size: 26px;">
   <i class="fas fa-arrow-right"></i> Encabezado
</div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<div style="position: absolute; top: 330px; left: 550px; color: red; font-size: 26px;">
   <i class="fas fa-arrow-right"></i> Bloque de código
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<div style="position: absolute; top: 415px; left: 550px; color: red; font-size: 26px;">
   <i class="fas fa-arrow-right"></i> Texto
</div>

## Encabezado - YAML

```yaml
title: "Presentación"
author: "Mariana y Santiago"
date: today # fecha de hoy automática
format: html # formato que se renderiza
```


::: {.incremental}
- YAML es un formato para escribir datos de configuración en distintas aplicaciones.

- En RMarkdown/Quarto se usa para definir cómo se va a renderizar el documento (HTML, PDF, etc.), escribir metadatos (Autores, título, fecha...)

:::

::: footer
Más información sobre [formatos para renderizar](https://quarto.org/docs/output-formats/all-formats.html) y [metadatos](https://quarto.org/docs/output-formats/all-formats.html)
:::

## Edición del texto
- <span style="font-size: 26.0pt;">Agregar encabezados: </span>

+--------------------+-----------------------------------+
|      Sintaxis      |           Resultado               |
+====================+===================================+
| ``` markdown       | ## Título {.heading-output}       |
| #Título            |                                   |
| ```                |                                   |
+--------------------+-----------------------------------+
| ``` markdown       | ### Título 2 {.heading-output}    | 
| ## Título 2        |                                   |
| ```                |                                   |
+--------------------+-----------------------------------+
| ``` markdown       | #### Título 3 {.heading-output}   |
| ### Título 3       |                                   |
| ```                |                                   |
+--------------------+-----------------------------------+
```{=html}
<style type="text/css">
.heading-output {
  border-bottom: none;
  margin-top: 0;
  margin-bottom: 0;
}
</style>
```

::: footer
[Sintáxis básica de Markdown](https://quarto.org/docs/authoring/markdown-basics.html#lists) y [guía completa de Markdown](https://www.markdownguide.org/).
:::

## Edición del texto

- <span style="font-size: 26.0pt;">Maneras de modificar el texto:</span>

+-----------------------------------------+-----------------------------------------+
|             Sintaxis                    |              Resultado                  |
+=========================================+=========================================+
| ``` markdown                            | *italica*, **bold**, ***ambas***        |
| *italica*, **bold**, ***ambas***        |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | superíndice^2^/subíndice~2~             |
| superíndice^2^ / subíndice~2~           |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | ~~tachado~~                             |
| ~~tachado~~                             |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | <span style="color:blue">Hola!</span>   |
| <span style="color:blue">Hola!</span>   |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | <span style="font-size: 12.0pt;">Hola!  |
| <span style="font-size: 12.0pt;">Hola!  | </span>                                 |
| </span>                                 |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+

::: footer
[Sintáxis básica de Markdown](https://quarto.org/docs/authoring/markdown-basics.html#lists) y [guía completa de Markdown](https://www.markdownguide.org/).
:::

## Generar listas

- <span style="font-size: 22.0pt;">Se pueden combinar números, signos, letras y espacios</span>

::: {.panel-tabset}

### Sintaxis
 ``` markdown                     
 * lista1                         
     + uno                        
     + dos         
     
 1. lista2                        
     i) sublista                  
          A.  sub-sublista        
 ```                        

### Resultado 1

* lista1                          
     + uno                         
     + dos         
     
### Resultado 2

1. lista2                         
     i) sublista                   
          A.  sub-sublista 
          
::: 

::: footer
[Sintáxis básica de Markdown](https://quarto.org/docs/authoring/markdown-basics.html#lists) y [guía completa de Markdown](https://www.markdownguide.org/).
:::

## Generar tablas

- <span style="font-size: 22.0pt;">Las columnas se separan con un tabulador y los encabezados con guíones</span>
- <span style="font-size: 22.0pt;">Los dos puntos especifican la alineación de las palabras</span>

::: {.panel-tabset}

### Sintaxis

``` markdown                                   
| Izquierda | Derecha | Default | Centrado |
|----------:|:--------|---------|:--------:|
|   12      |  12     |    12   |    12    |
|    1      |    1    |     1   |     1    |
```

### Resultado

| Izquierda | Derecha | Default | Centrado |
|----------:|:--------|---------|:--------:|
|    12     | 12      | 12      |   12     |
|     1     | 1       | 1       |   1      |
:::

## Agregar links o imágenes
+-----------------------------+---------------------------------------+
|    Sintaxis                 |       Resultados                      |
+=============================+=======================================+
| ``` markdown                | <https://quarto.org>                  |
| <https://quarto.org>        |                                       |
| ```                         |                                       |
+-----------------------------+---------------------------------------+
| ``` markdown                | [Quarto](https://quarto.org)          |
|[Quarto](https://quarto.org) |                                       |
| ```                         |                                       |
+-----------------------------+---------------------------------------+
| ``` markdown                | ![](./figuras/elephant.png){width=60%} | 
| ![Caption](elephant.png)    |                                       |
| ```                         |                                       |
+-----------------------------+---------------------------------------+

::: footer
[Sintáxis básica de Markdown](https://quarto.org/docs/authoring/markdown-basics.html#lists) y [guía completa de Markdown](https://www.markdownguide.org/).
:::

## Bloques de código {#sec-bloques}

<span style="font-size: 23.0pt;">Son bloques de código que se pueden ejecutar. Se utilizan diferentes argumentos para configurar el comportamiento:
<div style="text-align: center;">
  <img src="./figuras/im5.png">
</div>
::: {.incremental}
-	<span style="color: darkblue;">include = FALSE,</span> código y los resultados no aparecen en el archivo final
-	<span style="color: darkblue;">echo = FALSE,</span>  el código no aparece pero los resultados sí
-	<span style="color: darkblue;">message = FALSE,</span>  evita que los mensajes generados en el código aparezcan
-	<span style="color: darkblue;">warning = FALSE,</span>  evita que aparezcan las advertencias 
-	<span style="color: darkblue;">fig.cap = “…”,</span>  añade títulos a los gráficos
</span>
:::

::: footer
[Más sobre los bloques de código](https://quarto.org/docs/output-formats/html-code.html).
:::

## Diferencias - Quarto vs RMarkdown

::: {.incremental}
- rmarkdown necesita depende de la librería `rmarkdown`, mientras que Quarto no.
- Quarto es *multilingüe*: <span style="color: darkblue;">R, Python, Javascript y Julia</span>
-	Quarto es compatible con <span style="color: darkblue;">Knitr, Jupyter y Observable</span>
- Quarto crea archivos tipo <span style="color: darkblue;">HTML, PDF, MS Word, ePub, etc.</span> sin librerías externas. 
- Algunos paquetes solo se encuentran en rmarkdown, como los Tutoriales interactivos con [learnr](https://pkgs.rstudio.com/learnr/); ([Ver lista completa de paquetes y equivalencias entre los 2](https://quarto.org/docs/faq/rmarkdown.html#i-use-x-bookdown-blogdown-etc..-what-is-the-quarto-equivalent))
- Al final son muy similares y logran los mismos resultados. 
:::

::: {.notes}
Knitr es un motor de elaboración de informes en R que permite integrar código de R en documentos de LaTeX, HTML, Markdown, entre otros. Se utiliza principalmente para generar informes y análisis estadísticos que requieren la ejecución de código R.

Jupyter se utiliza ampliamente en la ciencia de datos, el análisis numérico, la computación científica y la educación. Estos documentos, conocidos como notebooks de Jupyter, admiten más de 40 lenguajes de programación, incluidos Python, R, Julia y Scala.

Observable es una plataforma y un lenguaje de programación interactiva basada en la web para la visualización de datos y el análisis colaborativo. Basado en tecnologías web estándar y JavaScript, Observable facilita la creación de visualizaciones de datos complejas y dinámicas.
:::

## Diferencias - Formatos 
:::: {.columns}

::: {.column width="50%"}
R Markdown (*output*)

```yaml
title: "Documento html"
output:
  html_document:
    toc: true # tabla de contenidos
    number_sections: true
    css: styles.css # estilo gráfico para el documento
```
:::
:::{.column width="50%"}
Quarto (*format*)


```yaml
title: "Documento html"
format:
  html:
    toc: true
    number-sections: true
    css: styles.css
```
:::
::::

## Diferencias - Opciones de los Bloques de código 
<span style="font-size: 23.0pt;"> En Rmarkdown se escriben las opciones en el la primera línea. En quarto se pueden escribir como comentarios: </span>

::: {.panel-tabset}

### Rmarkdown: 

```{{r, output: false}}
library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess", se = FALSE)
```

### Quarto:

```{r}
#| echo: fenced
#| output: false # no incluir código en renderizado
#| code-overflow: scroll # barra de desplazamiento para código largo
#| code-line-numbers: "2|3|4|5" # enfatizar código en presentación
#| fig-cap: "Air Quality" # Nombre de Figura

library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) + geom_point() + geom_smooth(method = "loess", se = FALSE)
```
:::



# Análisis de datos {background-iframe="./multiple-images/index.html"}


## Ejecutar código

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess")
```

::: footer
Ver más sobre [Ejecución de código](https://quarto.org/docs/presentations/revealjs/#executable-code)
:::


## Figuras + Datos {.smaller .scrollable transition="slide"}

::: panel-tabset
### Plot

```{r}
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess")
```

### Datos

Se pueden pasar dataframes a funciones como `kable` o `flextable` para producir una table en markdown

```{r echo=TRUE}
knitr::kable(mtcars, caption = "Un título")
```

### Modificar output

Agregar argumentos a los Bloques de código (ver @sec-bloques)

- `fig.align`: Alinear figura. Los valores pueden ser: “default”, “center”, “left”, o “right”? 
- `fig.cap`: Pie de figura. Por ejemplo “Gráfica muy padre”
- `fig.height` y `fig.width`

:::

::: footer
Más información: [Tabsets](https://quarto.org/docs/presentations/revealjs/#tabsets)
:::




## Integrar resultados de código en el reporte

```{r}
#| label: setup
#| echo: true
library(tidyverse)
library(palmerpenguins)

#filtrar datos
penguin_filter <- penguins |>
  filter(species == params$species, # param species: Adelie en YAML
    !is.na(body_mass_g))
# datos_originales - datos_filtrados
filas_distintas <- nrow(penguins) - nrow(penguin_filter)
```

*inline code* \`r `

```
Tenemos datos de 'r nrow(penguins)' pinguinos. Solo
'r filas_distintas' están catalogados como 'r params$species'. 
```
Cuando renderizemos el documento, obtenemos el siguiente resultado: 

::: {.incremental}
- Tenemos datos de `r nrow(penguins)` pinguinos. Solo
`r filas_distintas` están catalogados como `r params$species`. 
:::

##

![](./figuras/output-word.png)


## Usar widgets para visualización interactiva 


```{r}
#| echo: true
#| fig-height: 5
library(leaflet)
leaflet() %>%
  addTiles() %>%  
  addMarkers(lng=-99.184484, lat=19.325318, popup="UNAM")
```

::: footer
Más información: [widgets](https://quarto.org/docs/interactive/widgets/jupyter.html) y [htmlwidgets](https://quarto.org/docs/interactive/widgets/htmlwidgets.html)
:::


## Plotly

```{r}
#| echo: true
#| code-line-numbers: "2,6,7,8"
library(dplyr)
library(plotly)

my_df <- starwars |> filter(mass < 500) 

plot_ly(my_df, x = my_df$height, y = my_df$mass, 
        text = my_df$name, # Ver el nombre
        mode = "markers", color = my_df$gender)
```

::: footer
Más información: [Plotly](https://intro2r.library.duke.edu/widgets.html)
:::

## Gráficos 3-D

```{r}
#| echo: true
#| code-line-numbers: "5"

x <- seq_len(nrow(volcano)) + 100
y <- seq_len(ncol(volcano)) + 500

plot_ly() %>% 
  add_surface(x = ~x, y = ~y, z = ~volcano)
```

::: footer
Información topográfica del volcán Maunga Whau
:::

## Animaciones

```{r}
#| echo: true

data(gapminder, package = "gapminder")

base <- gapminder %>%
  plot_ly(x = ~gdpPercap, y = ~lifeExp, size = ~pop, 
          text = ~country, hoverinfo = "text") %>%
  layout(xaxis = list(type = "log"))

base %>%
  add_markers(color = ~continent, frame = ~year, ids = ~country) %>% # crear un frame por cada año para la animación
  animation_opts(1000, easing = "elastic", redraw = FALSE) %>% # 1000 milisegundos
  animation_button(
    x = 1, xanchor = "right", y = 0, yanchor = "bottom"
  ) %>%
  animation_slider(
    currentvalue = list(prefix = "YEAR ", font = list(color="red"))
  )
```


::: footer
[Más información](https://plotly-r.com/animating-views)
:::


## Tablas dinámicas

```{r}
library(DT)
datatable(iris) # creamos widget dinámico de nuestros datos

```



::: footer
[Librería DT](https://rstudio.github.io/DT/)
:::

## Aplicaciones con librería "Shiny"

::: {.incremental}

- Programar y correr estas aplicaciones. 

- Implica programar la interfaz de Usuario (botones, texto, HTML...) y programar el servidor (código en R).

- *Incrustar* las aplicaciones por medio de *iFrames* ("cargar una página dentro de otra página"). 
- No necesitamos programar nada. 

:::


```{=html}
 <iframe id="example1" src="https://gallery.shinyapps.io/anova_shiny_rstudio/" style="border: none; width: 100%; height: 720px" frameborder="0"></iframe>
```


::: footer
[Más sobre Shiny](https://quarto.org/docs/interactive/shiny/).

[Galería de Shiny apps](https://shiny.posit.co/r/gallery/).

[Aplicaciones de Shiny para estadística](https://github.com/huyingjie/Awesome-shiny-apps-for-statistics).
:::


# Formatos {background-iframe="./multiple-images/index.html"}

## {auto-animate=true} 

```yaml
format:
  html:
    css: styles.css
    html-math-method: katex
```

## {auto-animate=true} 

Múltiples formatos en un documento

```yaml
format:
  html:
    css: styles.css
    html-math-method: katex
  pdf:
    documentclass: report
    margin-left: 30mm
    margin-right: 30mm
```

![](./figuras/render-formats.png)

::: footer
[Todos los Formatos](https://quarto.org/docs/output-formats/all-formats.html)
:::

## html y pdf

::: {.columns style="margin-top: -100px;"}
::: {.column width="45%"}
![HTML](./figuras/boston-history-html.jpeg){fig-alt="A screenshot of a HTML article about Boston Terriers, the document has an image in the right hard margin, a floating table of contents, and different sections split up by headers"}
:::

::: {.column .fragment width="50%"}
![PDF](./figuras/boston-history-pdf.jpeg){fig-alt="A screenshot of a PDF article about Boston Terriers, the document has an image in the right hard margin, a floating table of contents, and different sections split up by headers"}
:::
:::

## formatos para artículos

::: columns
::: {.column .fragment width="35%"}
``` yaml
----
title: "A Short Demo Article"
format:
    jss-pdf: default
    jss-html: default
author:
  - name: Achim Zeileis
    affiliations:
      - name: Universität Innsbruck
        department: Department of Statistics
        address: Universitätsstr. 15
        city: Innsbruck
        country: Austria
        postal-code: 6020
      - Journal of Statistical Software
    orcid: 0000-0003-0918-3766
    email: Achim.Zeileis@R-project.org
    url: https://www.zeileis.org/
abstract: |
bibliography: bibliography.bib 
---
```
Formatos para revistas de Elsevier, PLOS, Nature...

:::

::: {.column .fragment width="60%"}
![](./figuras/jss.png){fig-alt="Screenshot of a rendered Quarto document to the Journal of Statistical Science format."}
:::
:::

::: footer
[Información](https://quarto.org/docs/journals/formats.html) y [formatos disponibles](https://quarto.org/docs/extensions/listing-journals.html)
:::


# Más ejemplos y usos {background-iframe="./multiple-images/index.html"}

## Artículos y reportes

```{=html}
<iframe width="780" height="500" src="https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.html" title="iframe libros"></iframe>
```


::: footer
[Más ejemplos](https://quarto.org/docs/gallery/#articles-reports)
:::

## Presentaciones

```{=html}
<iframe width="780" height="500" src="https://apreshill.github.io/palmerpenguins-useR-2022/#/title-slide" title="iframe libros"></iframe>
```


::: footer
[Más ejemplos](https://quarto.org/docs/gallery/#presentations)
:::

## Páginas web

```{=html}
<iframe width="780" height="500" src="https://nbdev.fast.ai/" title="iframe libros"></iframe>
```


::: footer
[Más ejemplos](https://quarto.org/docs/gallery/#websites)
:::

## libros

```{=html}
<iframe width="780" height="500" src="https://r4ds.hadley.nz/" title="iframe libros"></iframe>
```


::: footer
[Más ejemplos](https://quarto.org/docs/gallery/#books)
:::

# Otros {background-iframe="./multiple-images/index.html"}

## Citas

::: {.incremental}
- Insertar con `Insert > Citation`.
- Insertar con `DOI`, referencia de librería de `Zotero`, `Pubmed ID` u obtener referencias de un archivo `.bib` en el mismo directorio de nuestro documento. 
- Se crea un archivo de tipo `.bib` donde se añaden las referencias. 
- Al renderizar el documento, se ponen las referencias al final del documento. 
:::

##

![](./figuras/citas.png)

::: footer
[Más sobre citas](https://qmd4sci.njtierney.com/citations-and-styles)
:::

## Fórmulas


:::: {.columns}

::: {.column width="50%"}
Modelos lineales

```{r}
#| echo: false

# Librerías
library(datos) # libreria con distintos datos
library(equatiomatic) # libreria para extraer ecuación de modelos
library(lme4) # modelado con efectos mixtos

# Datos
datos_diamantes <- datos::diamantes
datos_diamantes$corte <- as.factor(datos_diamantes$corte)
```


```{r}
#| echo: true

# Modelado
lm_diamantes <- lm(quilate ~ corte, data = datos_diamantes) 
lmer_diamantes <- lmer(quilate ~ corte + (1 | precio), data = datos_diamantes)

# Extraer ecuaciones
lm_latex <- equatiomatic::extract_eq(lm_diamantes)
lmer_latex <- equatiomatic::extract_eq(lmer_diamantes)
```
:::
:::{.column width="50%"}

Output que se renderiza en el documento


```{r}
lm_latex

lmer_latex

```
:::

::::


::: {.notes}
relación entre el quilate de un diamante y su corte, teniendo en cuenta variaciones asociadas con el precio de los diamantes. 

Ecuación lineal explicación: 
Quilate sigue una distribución normal con una media (poblacional) que se modela como una función de las variables descritas a continuación. La varianza es de los residuos (variabilidad en quilates que no se explica por el modelo). 
El modelo para mu es el siguiente. 
aij es el efecto aleatorio del intercepto para cada nivel del precio j, lo que significa que hay un efecto base diferente para cada precio de diamante. 
Las betas representan los efectos fijos del corte de los diamantes.
Por último describe la distribución de los interceptos aleatorios aj para cada precio j. Cada intercepto sigue una distribución normal con media yu varianza, modelando la variabilidad de los quilates de los diamantes entre diferentes precios. 

:::

## iframes

```
<iframe width="780" height="500" src="https://julietarosell1.wixsite.com/website-4" title="iframe example"></iframe>
```

```{=html}
<iframe width="780" height="500" src="https://julietarosell1.wixsite.com/website-4" title="iframe example"></iframe>
```


